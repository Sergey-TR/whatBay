{"remainingRequest":"/home/sergey/projects/whatbayGH/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sergey/projects/whatbayGH/src/components/shop/MyShops.vue?vue&type=style&index=0&id=4c493fc8&scoped=true&lang=css&","dependencies":[{"path":"/home/sergey/projects/whatbayGH/src/components/shop/MyShops.vue","mtime":1643295873048},{"path":"/home/sergey/projects/whatbayGH/node_modules/css-loader/dist/cjs.js","mtime":1643348324312},{"path":"/home/sergey/projects/whatbayGH/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1643348325908},{"path":"/home/sergey/projects/whatbayGH/node_modules/postcss-loader/src/index.js","mtime":1643348324804},{"path":"/home/sergey/projects/whatbayGH/node_modules/cache-loader/dist/cjs.js","mtime":1643348323584},{"path":"/home/sergey/projects/whatbayGH/node_modules/vue-loader/lib/index.js","mtime":1643348325232}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJ0bi1uZXctbGlzdCB7CiAgd2lkdGg6IDMycHg7CiAgaGVpZ2h0OiAzMnB4OwogIGZvbnQtc2l6ZTogMzJweDsKICBwb3NpdGlvbjogZml4ZWQ7CiAgcmlnaHQ6IDE2cHg7CiAgYm90dG9tOiAzMnB4Owp9Cg=="},{"version":3,"sources":["MyShops.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyShops.vue","sourceRoot":"src/components/shop","sourcesContent":["<template>\n  <div>\n<!--    :key=\"reRender\"-->\n    <div class=\"main-wrapper flex-center-column\">\n      <div v-if=\"dataUserId.length\">\n        <ShopListItem\n          v-for=\"(shop, idx) in dataUserId\"\n          :idx = \"idx\"\n          :shop_data = \"shop\"\n        >\n        </ShopListItem>\n      </div>\n      <div v-else>\n        <p>У Вас пока нет магазинов и списков</p>\n      </div>\n      <router-link :to=\"{name: 'newList', params: {user_id: getUserId}}\"\n                   class=\"button btn-new-list\">+</router-link>\n    </div>\n    {{currentLists}}\n  </div>\n</template>\n\n<script>\nimport ShopListItem from \"./ShopListItem\";\nimport {mapActions, mapGetters} from \"vuex\";\nimport userData from \"../composables/userData\";\nimport getISO from \"../composables/getISO\";\n\nexport default {\n  name: \"MyShops\",\n\n  components: {\n    ShopListItem\n  },\n\n  props: ['idUser'],\n\n  methods: {\n    getId () {\n      const user_id = {\n        id: localStorage.getItem('saveUserId')\n      }\n      return user_id\n    }\n  },\n  computed: {\n    ...mapGetters\n    ([\n      'getShopsList',\n      'getUser',\n      'getShopUserId',\n      'getUserId',\n      'getShopsOptionList',\n      'getListUserId',\n      'getProductUserId',\n      'getCategoryUserId',\n        'userId'\n    ]),\n\n   dataUserId() {\n      const shops = this.getShopUserId;\n      const lists = this.getListUserId;\n     return userData(shops, lists);\n    },\n\n   currentLists() {\n      const currentData = [];\n      for (let data of this.dataUserId) {\n       // console.log(data)\n        const dataList = []\n        for (let list of data.lists) {\n         //console.log(list)\n          const currentList = []\n          if (list.day.split('T')[0] >= getISO(new Date())) {\n            currentList.push(list)\n           // console.log(currentList)\n          }\n          //console.log(currentList)\n          //dataList.push(currentList)\n         // console.log(dataList)\n        }\n        //console.log(dataList)\n        // if (list.day.split('T')[0] >= getISO(new Date())) {\n          // currentData.push(dataList)\n        // }\n      }\n      // console.log(currentData)\n      return currentData\n   }\n  },\n  async beforeUpdate() {\n    if (!Object.keys(this.getUser).length) {\n      await this.$store.dispatch('currentUser')\n    }\n\n  },\n  async mounted() {\n    await this.$store.dispatch('getShopFromUserId', this.getId())\n    await this.$store.dispatch('getListFromUserId', this.getId())\n    await this.$store.dispatch('getCategoryFromUserId', this.getId())\n    await this.$store.dispatch('getProductFromUserId', this.getId())\n\n  },\n\n}\n</script>\n\n<style scoped>\n  .btn-new-list {\n    width: 32px;\n    height: 32px;\n    font-size: 32px;\n    position: fixed;\n    right: 16px;\n    bottom: 32px;\n  }\n</style>"]}]}