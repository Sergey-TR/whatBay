{"remainingRequest":"/home/sergey/projects/whatbayGH/node_modules/babel-loader/lib/index.js!/home/sergey/projects/whatbayGH/src/store/modules/auth.js","dependencies":[{"path":"/home/sergey/projects/whatbayGH/src/store/modules/auth.js","mtime":1642946284951},{"path":"/home/sergey/projects/whatbayGH/babel.config.js","mtime":1638251051908},{"path":"/home/sergey/projects/whatbayGH/node_modules/cache-loader/dist/cjs.js","mtime":1643348323584},{"path":"/home/sergey/projects/whatbayGH/node_modules/babel-loader/lib/index.js","mtime":1643348324864}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3NlcmdleS9wcm9qZWN0cy93aGF0YmF5R0gvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmpzb24uc3RyaW5naWZ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgQVBJIGZyb20gIi4uLy4uL2NvbXBvbmVudHMvY29tcG9zYWJsZXMvaW5pdEFwaSI7CmltcG9ydCB7IGJhc2VVUkwgfSBmcm9tICIuLi8uLi9jb25zdGFuY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgYWN0aW9uczogewogICAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKF9yZWYsIF9yZWYyKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBjb21taXQsIGVtYWlsLCBwYXNzd29yZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2gsIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgICAgZW1haWwgPSBfcmVmMi5lbWFpbCwgcGFzc3dvcmQgPSBfcmVmMi5wYXNzd29yZDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGF4aW9zLnBvc3QoYmFzZVVSTCArICJsb2dpbiIsIHsKICAgICAgICAgICAgICAgICAgZW1haWw6IGVtYWlsLAogICAgICAgICAgICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQKICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgICAgICB2YXIgdXNlcklkID0gcmVzLmRhdGEudXNlci5pZDsKICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3NhdmVUb2tlbicsIHJlcy5kYXRhLmFjY2Vzc1Rva2VuKTsKICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3NhdmVVc2VyJywgcmVzLmRhdGEudXNlcik7CiAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdzYXZlVXNlcklkJywgSlNPTi5zdHJpbmdpZnkocmVzLmRhdGEudXNlci5pZCkpOwogICAgICAgICAgICAgICAgICBjb21taXQoJ3VwZGF0ZVVzZXJJZCcsIHVzZXJJZCk7CiAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICAgICAgICBhbGVydCgi0J/QvtC70YzQt9C+0LLQsNGC0LXQu9GPINGBINGC0LDQutC40Lwg0LjQvNC10L3QtdC8INC4INC/0LDRgNC+0LvQtdC8INC90LUg0YHRg9GJ0LXRgdGC0LLRg9C10YIsICIgKyAi0L/RgNC+0LnQtNC40YLQtSDRgNC10LPQuNGB0YLRgNCw0YbQuNGOIik7CiAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICByZWdpc3RyYXRpb246IGZ1bmN0aW9uIHJlZ2lzdHJhdGlvbihfcmVmMywgX3JlZjQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBjb21taXQsIHVzZXJfbmFtZSwgZW1haWwsIHBhc3N3b3JkLCBjb25maXJtUGFzc3dvcmQsIGZpcnN0bmFtZSwgbGFzdG5hbWU7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjMuZGlzcGF0Y2gsIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgICAgICAgICAgIHVzZXJfbmFtZSA9IF9yZWY0LnVzZXJfbmFtZSwgZW1haWwgPSBfcmVmNC5lbWFpbCwgcGFzc3dvcmQgPSBfcmVmNC5wYXNzd29yZCwgY29uZmlybVBhc3N3b3JkID0gX3JlZjQuY29uZmlybVBhc3N3b3JkLCBmaXJzdG5hbWUgPSBfcmVmNC5maXJzdG5hbWUsIGxhc3RuYW1lID0gX3JlZjQubGFzdG5hbWU7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgYXhpb3MucG9zdChiYXNlVVJMICsgJ3JlZ2lzdGVyJywgewogICAgICAgICAgICAgICAgICB1c2VyX25hbWU6IHVzZXJfbmFtZSwKICAgICAgICAgICAgICAgICAgZW1haWw6IGVtYWlsLAogICAgICAgICAgICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQsCiAgICAgICAgICAgICAgICAgIGNvbmZpcm1QYXNzd29yZDogY29uZmlybVBhc3N3b3JkLAogICAgICAgICAgICAgICAgICBmaXJzdG5hbWU6IGZpcnN0bmFtZSwKICAgICAgICAgICAgICAgICAgbGFzdG5hbWU6IGxhc3RuYW1lCiAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgICAgdmFyIHVzZXIgPSByZXMuZGF0YS51c2VyOwogICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc2F2ZVRva2VuJywgcmVzLmRhdGEuYWNjZXNzVG9rZW4pOwogICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc2F2ZVVzZXInLCBKU09OLnN0cmluZ2lmeShyZXMuZGF0YS51c2VyKSk7CiAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdzYXZlVXNlcklkJywgSlNPTi5zdHJpbmdpZnkocmVzLmRhdGEudXNlci5pZCkpOyAvL2NvbW1pdCgnYXV0aF9zdWNjZXNzJywgdXNlcikKCiAgICAgICAgICAgICAgICAgIC8vY29tbWl0KCdhdXRoX3N1Y2Nlc3MnLCB1c2VyKQogICAgICAgICAgICAgICAgICBhbGVydCgi0KDQtdCz0LjRgdGC0YDQsNGG0LjRjyDQv9GA0L7RiNC70LAg0YPRgdC/0LXRiNC90L4iKTsKICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoX3JlZjUpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgdXNlcjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogICAgICAgICAgICAgICAgdXNlciA9ICcnOwogICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7CiAgICAgICAgICAgICAgICBjb21taXQoJ2xvZ291dFVzZXInLCB1c2VyKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy9odHRwOi8vZGV2LmdydXBwYTQucnU6MTIwMTIvCiAgICBjdXJyZW50VXNlcjogZnVuY3Rpb24gY3VycmVudFVzZXIoX3JlZjYpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgaWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY2LmNvbW1pdDsKICAgICAgICAgICAgICAgIGlkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3NhdmVVc2VySWQnKTsKCiAgICAgICAgICAgICAgICBpZiAoaWQpIHsKICAgICAgICAgICAgICAgICAgQVBJLmdldChiYXNlVVJMICsgJ3VzZXJzJyArICc/aWQ9JyArIGlkKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgdXNlciA9IHJlcy5kYXRhOwogICAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdjdXJyZW50VXNlcicsIHJlcy5kYXRhKTsKICAgICAgICAgICAgICAgICAgICBjb21taXQoJ2F1dGhfc3VjY2VzcycsIHVzZXIpOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIGF1dGhfc3VjY2VzczogZnVuY3Rpb24gYXV0aF9zdWNjZXNzKHN0YXRlLCB1c2VyKSB7CiAgICAgIHN0YXRlLnVzZXIgPSB1c2VyOwogICAgfSwKICAgIGxvZ291dFVzZXI6IGZ1bmN0aW9uIGxvZ291dFVzZXIoc3RhdGUsIHVzZXIpIHsKICAgICAgc3RhdGUudXNlciA9IHVzZXI7CiAgICB9LAogICAgdXBkYXRlVXNlcklkOiBmdW5jdGlvbiB1cGRhdGVVc2VySWQoc3RhdGUsIHVzZXJJZCkgewogICAgICBzdGF0ZS51c2VySWQgPSB1c2VySWQ7CiAgICB9CiAgfSwKICBzdGF0ZTogewogICAgdXNlcjogW10sCiAgICB1c2VySWQ6ICcnCiAgfSwKICBnZXR0ZXJzOiB7CiAgICBnZXRVc2VyOiBmdW5jdGlvbiBnZXRVc2VyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyOwogICAgfSwKICAgIGdldFVzZXJJZDogZnVuY3Rpb24gZ2V0VXNlcklkKHN0YXRlKSB7CiAgICAgIGlmICghT2JqZWN0LmtleXMoc3RhdGUudXNlcikubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHN0YXRlLnVzZXJbMF0uaWQ7CiAgICAgIH0KICAgIH0sCiAgICB1c2VySWQ6IGZ1bmN0aW9uIHVzZXJJZChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlcklkOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/sergey/projects/whatbayGH/src/store/modules/auth.js"],"names":["axios","API","baseURL","actions","login","dispatch","commit","email","password","post","then","res","userId","data","user","id","localStorage","setItem","accessToken","JSON","stringify","catch","error","console","log","alert","registration","user_name","confirmPassword","firstname","lastname","logout","clear","currentUser","getItem","get","mutations","auth_success","state","logoutUser","updateUserId","getters","getUser","getUserId","Object","keys","length"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport API from \"../../components/composables/initApi\";\nimport {baseURL} from \"../../constance\";\n\nexport default {\n    actions: {\n        async login({dispatch, commit}, {email, password}) {\n           return  axios.post(baseURL + \"login\", {email, password})\n                .then(res => {\n                    const userId = res.data.user.id;\n\n                    localStorage.setItem('saveToken', res.data.accessToken);\n                    localStorage.setItem('saveUser', res.data.user);\n                    localStorage.setItem('saveUserId', JSON.stringify(res.data.user.id));\n\n                    commit('updateUserId', userId)\n                }).catch((error) => {\n\n                console.log(error);\n                alert(\"Пользователя с таким именем и паролем не существует, \" +\n                    \"пройдите регистрацию\")\n            })\n        },\n        async registration({dispatch, commit},\n                           {user_name, email, password, confirmPassword, firstname, lastname}) {\n           return axios.post(baseURL + 'register',\n                {user_name, email, password, confirmPassword, firstname, lastname})\n                .then(res => {\n                    const user = res.data.user;\n                    localStorage.setItem('saveToken', res.data.accessToken);\n                    localStorage.setItem('saveUser', JSON.stringify(res.data.user));\n                    localStorage.setItem('saveUserId', JSON.stringify(res.data.user.id));\n                    //commit('auth_success', user)\n                    alert(\"Регистрация прошла успешно\")\n                })\n        },\n        async logout({commit}) {\n            const user = '';\n            localStorage.clear()\n            commit('logoutUser', user)\n        },\n//http://dev.gruppa4.ru:12012/\n        async currentUser({commit}) {\n            const id = localStorage.getItem('saveUserId')\n             if (id) {\n                API.get(baseURL + 'users' + '?id=' + id)\n                    .then(res => {\n                        const user = res.data\n                        localStorage.setItem('currentUser', res.data)\n                        commit('auth_success', user)\n                    })\n             }\n        }\n    },\n     mutations: {\n        auth_success(state, user) {\n            state.user = user\n        },\n        logoutUser(state, user) {\n            state.user = user\n        },\n        updateUserId(state, userId) {\n            state.userId = userId\n        },\n     },\n     state: {\n        user: [],\n        userId: ''\n     },\n     getters: {\n        getUser(state) {\n            return state.user\n        },\n        getUserId(state) {\n            if (!Object.keys(state.user).length) {\n                return null\n            } else {\n                return state.user[0].id\n            }\n         },\n         userId(state) {\n            return state.userId\n         }\n    }\n}"]}]}