{"remainingRequest":"/home/sergey/projects/whatbayGH/node_modules/babel-loader/lib/index.js!/home/sergey/projects/whatbayGH/src/store/modules/category.js","dependencies":[{"path":"/home/sergey/projects/whatbayGH/src/store/modules/category.js","mtime":1642414749207},{"path":"/home/sergey/projects/whatbayGH/babel.config.js","mtime":1638251051908},{"path":"/home/sergey/projects/whatbayGH/node_modules/cache-loader/dist/cjs.js","mtime":1643348323584},{"path":"/home/sergey/projects/whatbayGH/node_modules/babel-loader/lib/index.js","mtime":1643348324864}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3NlcmdleS9wcm9qZWN0cy93aGF0YmF5R0gvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5qc29uLnN0cmluZ2lmeS5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IEFQSSBmcm9tICIuLi8uLi9jb21wb25lbnRzL2NvbXBvc2FibGVzL2luaXRBcGkiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgeyBiYXNlVVJMIH0gZnJvbSAiLi4vLi4vY29uc3RhbmNlIjsKZXhwb3J0IGRlZmF1bHQgewogIGFjdGlvbnM6IHsKICAgIGdldENhdGVnb3JpZXM6IGZ1bmN0aW9uIGdldENhdGVnb3JpZXMoY3R4KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgQVBJLmdldChiYXNlVVJMICsgJ2NhdGVnb3JpZXMnKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgICAgdmFyIGFsbENhdGVnb3JpZXMgPSByZXMuZGF0YTsKICAgICAgICAgICAgICAgICAgY3R4LmNvbW1pdCgndXBkYXRlQWxsQ2F0ZWdvcmllcycsIGFsbENhdGVnb3JpZXMpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBjcmVhdGVOZXdDYXRlZ29yeTogZnVuY3Rpb24gY3JlYXRlTmV3Q2F0ZWdvcnkoX3JlZiwgX3JlZjIpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBjb21taXQsIGNhdGVnb3J5X25hbWUsIHVzZXJfaWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaCwgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICBjYXRlZ29yeV9uYW1lID0gX3JlZjIuY2F0ZWdvcnlfbmFtZSwgdXNlcl9pZCA9IF9yZWYyLnVzZXJfaWQ7CiAgICAgICAgICAgICAgICBBUEkucG9zdChiYXNlVVJMICsgJ2NhdGVnb3JpZXMnLCB7CiAgICAgICAgICAgICAgICAgIGNhdGVnb3J5X25hbWU6IGNhdGVnb3J5X25hbWUsCiAgICAgICAgICAgICAgICAgIHVzZXJfaWQ6IHVzZXJfaWQKICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdjYXRlZ29yeScsIEpTT04uc3RyaW5naWZ5KHJlcy5kYXRhKSk7IC8vY29tbWl0KCd1cGRhdGVBbGxDYXRlZ29yaWVzJykKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRDYXRlZ29yeUZyb21Vc2VySWQ6IGZ1bmN0aW9uIGdldENhdGVnb3J5RnJvbVVzZXJJZChfcmVmMywgX3JlZjQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBjb21taXQsIGlkOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWYzLmRpc3BhdGNoLCBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgICBpZCA9IF9yZWY0LmlkOwogICAgICAgICAgICAgICAgQVBJLmdldChiYXNlVVJMICsgJ2NhdGVnb3JpZXMnICsgJz91c2VyX2lkPScgKyBpZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAgIHZhciBjYXRlZ29yeVVzZXJJZCA9IHJlcy5kYXRhOwogICAgICAgICAgICAgICAgICBjb21taXQoJ3VwZGF0ZUNhdGVnb3J5VXNlcklkJywgY2F0ZWdvcnlVc2VySWQpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICB1cGRhdGVBbGxDYXRlZ29yaWVzOiBmdW5jdGlvbiB1cGRhdGVBbGxDYXRlZ29yaWVzKHN0YXRlLCBhbGxDYXRlZ29yaWVzKSB7CiAgICAgIHN0YXRlLmNhdGVnb3JpZXMgPSBhbGxDYXRlZ29yaWVzOwogICAgfSwKICAgIHVwZGF0ZUNhdGVnb3J5VXNlcklkOiBmdW5jdGlvbiB1cGRhdGVDYXRlZ29yeVVzZXJJZChzdGF0ZSwgY2F0ZWdvcnlVc2VySWQpIHsKICAgICAgc3RhdGUuY2F0ZWdvcmllc1VzZXJJZCA9IGNhdGVnb3J5VXNlcklkOwogICAgfQogIH0sCiAgc3RhdGU6IHsKICAgIGNhdGVnb3JpZXM6IFtdLAogICAgY2F0ZWdvcmllc1VzZXJJZDogW10KICB9LAogIGdldHRlcnM6IHsKICAgIGdldEFsbENhdGVnb3JpZXM6IGZ1bmN0aW9uIGdldEFsbENhdGVnb3JpZXMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmNhdGVnb3JpZXM7CiAgICB9LAogICAgZ2V0Q2F0ZWdvcnlVc2VySWQ6IGZ1bmN0aW9uIGdldENhdGVnb3J5VXNlcklkKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5jYXRlZ29yaWVzVXNlcklkOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/sergey/projects/whatbayGH/src/store/modules/category.js"],"names":["API","axios","baseURL","actions","getCategories","ctx","get","then","res","allCategories","data","commit","createNewCategory","dispatch","category_name","user_id","post","console","log","localStorage","setItem","JSON","stringify","getCategoryFromUserId","id","categoryUserId","mutations","updateAllCategories","state","categories","updateCategoryUserId","categoriesUserId","getters","getAllCategories","getCategoryUserId"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,sCAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AAEA,eAAe;AACXC,EAAAA,OAAO,EAAE;AACAC,IAAAA,aADA,yBACcC,GADd,EACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBL,gBAAAA,GAAG,CAACM,GAAJ,CAAQJ,OAAO,GAAG,YAAlB,EACKK,IADL,CACU,UAAAC,GAAG,EAAI;AACT,sBAAMC,aAAa,GAAGD,GAAG,CAACE,IAA1B;AACAL,kBAAAA,GAAG,CAACM,MAAJ,CAAW,qBAAX,EAAkCF,aAAlC;AACH,iBAJL;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMvB,KAPI;AASCG,IAAAA,iBATD,0CASiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA7CC,gBAAAA,QAA6C,QAA7CA,QAA6C,EAAnCF,MAAmC,QAAnCA,MAAmC;AAAzBG,gBAAAA,aAAyB,SAAzBA,aAAyB,EAAVC,OAAU,SAAVA,OAAU;AACnEf,gBAAAA,GAAG,CAACgB,IAAJ,CAASd,OAAO,GAAG,YAAnB,EAAiC;AAACY,kBAAAA,aAAa,EAAbA,aAAD;AAAgBC,kBAAAA,OAAO,EAAPA;AAAhB,iBAAjC,EACKR,IADL,CACU,UAAAC,GAAG,EAAI;AACTS,kBAAAA,OAAO,CAACC,GAAR,CAAYV,GAAG,CAACE,IAAhB;AACAS,kBAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAed,GAAG,CAACE,IAAnB,CAAjC,EAFS,CAGT;AACH,iBALL;;AADmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOrE,KAhBI;AAiBCa,IAAAA,qBAjBD,+CAiBiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzBV,gBAAAA,QAAyB,SAAzBA,QAAyB,EAAfF,MAAe,SAAfA,MAAe;AAALa,gBAAAA,EAAK,SAALA,EAAK;AACnDxB,gBAAAA,GAAG,CAACM,GAAJ,CAAQJ,OAAO,GAAG,YAAV,GAAyB,WAAzB,GAAuCsB,EAA/C,EACKjB,IADL,CACU,UAAAC,GAAG,EAAI;AACT,sBAAMiB,cAAc,GAAGjB,GAAG,CAACE,IAA3B;AACAC,kBAAAA,MAAM,CAAC,sBAAD,EAAyBc,cAAzB,CAAN;AACH,iBAJL;;AADmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMrD;AAvBI,GADE;AA0BXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,mBADO,+BACaC,KADb,EACoBnB,aADpB,EACmC;AACtCmB,MAAAA,KAAK,CAACC,UAAN,GAAmBpB,aAAnB;AACH,KAHM;AAIPqB,IAAAA,oBAJO,gCAIcF,KAJd,EAIqBH,cAJrB,EAIqC;AACxCG,MAAAA,KAAK,CAACG,gBAAN,GAAyBN,cAAzB;AACH;AANM,GA1BA;AAkCXG,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAE,EADT;AAEHE,IAAAA,gBAAgB,EAAE;AAFf,GAlCI;AAsCXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,gBADK,4BACYL,KADZ,EACmB;AACpB,aAAOA,KAAK,CAACC,UAAb;AACH,KAHI;AAILK,IAAAA,iBAJK,6BAIaN,KAJb,EAIoB;AACrB,aAAOA,KAAK,CAACG,gBAAb;AACH;AANI;AAtCE,CAAf","sourcesContent":["import API from \"../../components/composables/initApi\";\nimport axios from \"axios\";\nimport {baseURL} from \"../../constance\";\n\nexport default {\n    actions: {\n       async getCategories(ctx) {\n            API.get(baseURL + 'categories')\n                .then(res => {\n                    const allCategories = res.data\n                    ctx.commit('updateAllCategories', allCategories)\n                })\n        },\n\n        async createNewCategory({dispatch, commit}, {category_name, user_id}) {\n           API.post(baseURL + 'categories', {category_name, user_id})\n               .then(res => {\n                   console.log(res.data)\n                   localStorage.setItem('category', JSON.stringify(res.data))\n                   //commit('updateAllCategories')\n               })\n        },\n        async getCategoryFromUserId({dispatch, commit}, {id}) {\n           API.get(baseURL + 'categories' + '?user_id=' + id)\n               .then(res => {\n                   const categoryUserId = res.data\n                   commit('updateCategoryUserId', categoryUserId)\n               })\n        }\n    },\n    mutations: {\n        updateAllCategories(state, allCategories) {\n            state.categories = allCategories\n        },\n        updateCategoryUserId(state, categoryUserId) {\n            state.categoriesUserId = categoryUserId\n        }\n    },\n    state: {\n        categories: [],\n        categoriesUserId: []\n    },\n    getters: {\n        getAllCategories(state) {\n            return state.categories\n        },\n        getCategoryUserId(state) {\n            return state.categoriesUserId\n        }\n    }\n}"]}]}